name: Docker Push

on:
  workflow_dispatch:
    branches: [master]
    inputs:
      version:
        description: "Version"
        required: true

jobs:
  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          echo '$DATABASE_NAME'=${{ secrets.DATABASE_NAME }} >> .env
          echo '$DATABASE_USER'=${{ secrets.DATABASE_USER }} >> .env
          echo '$DATABASE_PASS'=${{ secrets.DATABASE_PASS }} >> .env
          echo '$DATABASE_PORT'=${{ secrets.DATABASE_PORT }} >> .env
          echo '$DATABASE_HOST'=${{ secrets.DATABASE_HOST }} >> .env
          echo '$JWT_EXPIRE_DURATION'=${{ secrets.JWT_EXPIRE_DURATION }} >> .env
          echo '$JWT_HASH_SALT'=${{ secrets.JWT_HASH_SALT }} >> .env
          echo '$JWT_SIGNING_KEY'=${{ secrets.JWT_SIGNING_KEY }} >> .env
          echo '$RABBITMQ_USER'=${{ secrets.RABBITMQ_USER }} >> .env
          echo '$RABBITMQ_PASSWORD'=${{ secrets.RABBITMQ_PASSWORD }} >> .env
          echo '$RABBITMQ_PORT'=${{ secrets.RABBITMQ_PORT }} >> .env
          echo '$RABBITMQ_HOST'=${{ secrets.RABBITMQ_HOST }} >> .env
          echo '$MAILGUN_API_KEY'=${{ secrets.MAILGUN_API_KEY }} >> .env
          echo '$MAILGUN_DOMAIN'=${{ secrets.MAILGUN_DOMAIN }} >> .env
          echo '$MAILGUN_PUBLIC_KEY'=${{ secrets.MAILGUN_PUBLIC_KEY }} >> .env
          echo '$REDIS_PASSWORD'=${{ secrets.REDIS_PASSWORD }} >> .env
          echo '$REDIS_PORT'=${{ secrets.REDIS_PORT }} >> .env
          echo '$REDIS_HOST'=${{ secrets.REDIS_HOST }} >> .env
          echo '$REDIS_DB'=${{ secrets.REDIS_DB }} >> .env

          docker build --build-arg version="${{ github.event.inputs.version }}" --no-cache -f ./docker/app.Dockerfile -t ucrm .
          docker tag ucrm "ghcr.io/ignavan39/ucrm:${{ github.event.inputs.version }}"
          docker tag ucrm ghcr.io/ignavan39/ucrm:latest
      - name: Push Image
        run: |
          docker push "ghcr.io/ignavan39/ucrm:${{ github.event.inputs.version }}"
          docker push ghcr.io/ignavan39/ucrm:latest
      - name: Deploy
        run: |
          eval `ssh-agent -s`
          echo ${{ secrets.SSH_KEY }} >> id_rsa
          ssh-add id_rsa
          ssh ${{ secrets.IP }} -l root
          docker pull ghcr.io/ignavan39/ucrm:latest

  build-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build --build-arg version="${{ github.event.inputs.version }}" --no-cache -f ./docker/frontend.Dockerfile -t ucrm-frontend .
          docker tag ucrm-frontend "ghcr.io/ignavan39/ucrm-frontend:${{ github.event.inputs.version }}"
          docker tag ucrm-frontend ghcr.io/ignavan39/ucrm-frontend:latest
      - name: Push Image
        run: |
          docker push "ghcr.io/ignavan39/ucrm-frontend:${{ github.event.inputs.version }}"
          docker push ghcr.io/ignavan39/ucrm-frontend:latest
