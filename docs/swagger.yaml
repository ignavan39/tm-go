definitions:
  api.AddAccessPayload:
    properties:
      access:
        type: string
      dashboard_id:
        type: string
      user_id:
        type: string
    type: object
  api.AddCustomField:
    properties:
      field_type:
        type: string
      is_nullable:
        type: boolean
      name:
        type: string
    type: object
  api.AddSettingsPayload:
    properties:
      secret:
        type: string
    type: object
  api.CreateOnePayload:
    properties:
      dashboard_id:
        type: string
      name:
        type: string
    type: object
  api.CreatePipelineResponse:
    properties:
      pipeline:
        $ref: '#/definitions/models.Pipeline'
    type: object
  api.CreateQueuePayload:
    properties:
      chat_id:
        type: string
      dashboard_id:
        type: string
    type: object
  api.PingPayload:
    properties:
      queue_name:
        type: string
      time:
        type: string
    type: object
  api.SignPayload:
    properties:
      code:
        type: integer
      email:
        type: string
      password:
        type: string
    type: object
  api.SignResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  api.SubscribePayload:
    properties:
      dashboard_id:
        type: string
      queue_name:
        type: string
    type: object
  api.UpdateDashboardNamePayload:
    properties:
      name:
        type: string
    type: object
  api.UpdateNamePayload:
    properties:
      name:
        type: string
    type: object
  api.UpdateOnePayload:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
    type: object
  api.UpdatePayload:
    properties:
      city:
        type: string
      fields:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      phone:
        type: string
    type: object
  api.VerifyCodePayload:
    properties:
      email:
        type: string
    type: object
  core.ClientQueueConfig:
    properties:
      chatId:
        type: string
      dashboard_id:
        type: string
      exchange:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: string
      queue_name:
        type: string
      routing_key:
        type: string
      salt:
        type: string
      user:
        type: string
      userId:
        type: string
    type: object
  httpext.CommonError:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  models.Card:
    properties:
      chat:
        $ref: '#/definitions/models.Chat'
      contacts:
        items:
          $ref: '#/definitions/models.Contact'
        type: array
      fields:
        items:
          $ref: '#/definitions/models.CardField'
        type: array
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      pipeline_id:
        type: string
      updated_at:
        type: string
    type: object
  models.CardField:
    properties:
      card_id:
        type: string
      dashboard_id:
        type: string
      field_id:
        type: string
      id:
        type: string
      is_nullable:
        type: boolean
      name:
        type: string
      type:
        type: string
      value:
        type: string
    type: object
  models.Chat:
    properties:
      card_id:
        type: string
      id:
        type: string
      last_employee_id:
        type: string
      last_message:
        type: string
      last_sender:
        type: string
    type: object
  models.Contact:
    properties:
      card_id:
        type: string
      city:
        type: string
      dashboard_id:
        type: string
      fields:
        items:
          $ref: '#/definitions/models.ContactField'
        type: array
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.ContactField:
    properties:
      contact_id:
        type: string
      dashboard_id:
        type: string
      field_id:
        type: string
      id:
        type: string
      is_nullable:
        type: boolean
      name:
        type: string
      type:
        type: string
      value:
        type: string
    type: object
  models.Dashboard:
    properties:
      author_id:
        type: string
      id:
        type: string
      name:
        type: string
      pipelines:
        items:
          $ref: '#/definitions/models.Pipeline'
        type: array
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/models.DashboardsUsers'
        type: array
    type: object
  models.DashboardSettings:
    properties:
      client_token:
        type: string
      dashboard_id:
        type: string
      id:
        type: string
      secret:
        type: string
    type: object
  models.DashboardsUsers:
    properties:
      access:
        type: string
      dashboard_id:
        type: string
      id:
        type: string
      user_id:
        type: string
    type: object
  models.Field:
    properties:
      dashboard_id:
        type: string
      id:
        type: string
      is_nullable:
        type: boolean
      name:
        type: string
      type:
        type: string
    type: object
  models.Pipeline:
    properties:
      card:
        items:
          $ref: '#/definitions/models.Card'
        type: array
      dashboard_id:
        type: string
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      update_at:
        type: string
    type: object
  models.User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: Unnamed URCM
  title: Unnamed URCM
  version: "1.0"
paths:
  /cards:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: cardId
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdateOnePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update card
      tags:
      - cards
  /cards/{cardId}:
    delete:
      parameters:
      - description: ' '
        in: query
        name: cardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Delete card
      tags:
      - cards
    get:
      consumes:
      - application/json
      description: Get one card by id
      parameters:
      - description: ' '
        in: query
        name: cardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Get one card
      tags:
      - cards
  /cards/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateOnePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Create card
      tags:
      - cards
  /cards/order/{pipelineId}/{cardId}/order:
    get:
      description: Update order
      parameters:
      - description: ' '
        in: query
        name: cardId
        required: true
        type: string
      - description: ' '
        in: query
        name: pipelineId
        required: true
        type: string
      - description: ' '
        in: query
        name: order
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update order
      tags:
      - cards
  /connect/create:
    post:
      consumes:
      - application/json
      description: Create queue
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateQueuePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.ClientQueueConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Create queue
      tags:
      - connect
  /connect/ping:
    post:
      consumes:
      - application/json
      description: Ping
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.PingPayload'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Ping
      tags:
      - connect
  /connect/unsubscribe:
    post:
      consumes:
      - application/json
      description: Unsubscribe
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.SubscribePayload'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Unsubscribe
      tags:
      - connect
  /contacts/{contactId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Delete contact
      tags:
      - contacts
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Contact'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Get contact
      tags:
      - contacts
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: contactId
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdatePayload'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update contact
      tags:
      - contacts
  /contacts/{contactId}/{newName}:
    patch:
      parameters:
      - description: ' '
        in: query
        name: contactId
        required: true
        type: string
      - description: ' '
        in: query
        name: newName
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Rename contact
      tags:
      - contacts
  /contacts/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateOnePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Contact'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Create contact
      tags:
      - contacts
  /dashboards:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Dashboard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Get dashboards by user
      tags:
      - dashboards
  /dashboards/{dashboardId}:
    delete:
      parameters:
      - description: ' '
        in: query
        name: dashboardId
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Delete dashboard
      tags:
      - dashboards
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dashboard'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Get dashboard
      tags:
      - dashboards
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: dashboardId
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdateNamePayload'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update dashboard name
      tags:
      - dashboards
  /dashboards/{dashboardId}/{userId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: dashboardId
        required: true
        type: string
      - description: ' '
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Remove access
      tags:
      - dashboards
  /dashboards/{dashboardId}/custom-field:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: dashboardId
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.AddCustomField'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Field'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Create custom field
      tags:
      - dashboards
  /dashboards/{dashboardId}/settings:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: dashboardId
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.AddSettingsPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DashboardSettings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Add webhook
      tags:
      - dashboards
  /dashboards/{dashboardId}/webhook:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: dashboardId
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdateNamePayload'
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Add webhook
      tags:
      - contacts
  /dashboards/addAccess:
    post:
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.AddAccessPayload'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Add Access
      tags:
      - dashboards
  /dashboards/create:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateOnePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dashboard'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Create dashboard
      tags:
      - dashboards
  /dashboards/updateAccess:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: AddAccessPayload
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update access
      tags:
      - dashboards
  /pipelines/{pipelineId}:
    delete:
      parameters:
      - description: ' '
        in: query
        name: pipelineId
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Delete pipeline
      tags:
      - pipelines
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.UpdateDashboardNamePayload'
      - description: ' '
        in: query
        name: pipelineId
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update dashboard`s name
      tags:
      - pipelines
  /pipelines/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.CreateOnePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.CreatePipelineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Create pipeline
      tags:
      - pipelines
  /pipelines/order/{pipelineId}/{order}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: query
        name: pipelineId
        required: true
        type: string
      - description: ' '
        in: query
        name: order
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      security:
      - JWT: []
      summary: Update pipeline order
      tags:
      - pipelines
  /users/sendVerifyCode:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.VerifyCodePayload'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      summary: Send verification code
      tags:
      - users
  /users/signIn:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.SignPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SignResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      summary: Sign-in
      tags:
      - users
  /users/signUp:
    post:
      consumes:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.SignResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpext.CommonError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.CommonError'
      summary: Sign-up
      tags:
      - users
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
